name: Agent CI

on:
  push:
    branches: [ main, develop ]
    paths: 
      - 'agent/**'
      - '.github/workflows/agent-ci.yml'
  pull_request:
    branches: [ main, develop ]
    paths: 
      - 'agent/**'
      - '.github/workflows/agent-ci.yml'

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Cache Maven dependencies
      uses: actions/cache@v3
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
        
    - name: Run tests
      run: |
        cd agent
        mvn clean test
        
    - name: Generate test report
      uses: dorny/test-reporter@v1
      if: success() || failure()
      with:
        name: Maven Tests
        path: agent/target/surefire-reports/*.xml
        reporter: java-junit
        
  build:
    needs: test
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Cache Maven dependencies
      uses: actions/cache@v3
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
        
    - name: Build with Maven
      run: |
        cd agent
        mvn clean compile package
        
    - name: Build Docker image
      run: |
        cd agent
        mvn jib:dockerBuild -Dimage=bics-semantic-kernel-agent:${{ github.sha }}
        
    - name: Save Docker image
      run: |
        docker save bics-semantic-kernel-agent:${{ github.sha }} | gzip > agent-image.tar.gz
        
    - name: Upload Docker image artifact
      uses: actions/upload-artifact@v3
      with:
        name: agent-docker-image
        path: agent-image.tar.gz
        retention-days: 7

  security-scan:
    needs: build
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: './agent'
        format: 'sarif'
        output: 'trivy-results.sarif'
        
    - name: Upload Trivy scan results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v2
      if: always()
      with:
        sarif_file: 'trivy-results.sarif'